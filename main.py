import telebot
import pickle

bot = telebot.TeleBot("672604929:AAHtcmTYe6gJj6YFhkZJhgtuRwv9qNNTxlE")

queue = []
queue_id = []
queue_size = 0
admin_id = 573464296
moder_id = []
black_list = []


def save_data():
    with open('objs.pkl', 'wb') as f:
        pickle.dump([queue, queue_id, queue_size, black_list, moder_id], f)


def load_data():
    global queue, queue_id, queue_size, black_list, moder_id
    with open('objs.pkl', 'rb') as f:
        queue, queue_id, queue_size, black_list, moder_id = pickle.load(f)


def log(message):
    print("\n ------")
    from datetime import datetime
    print(datetime.now())
    print("Message from {0} {1}. (id = {2}) \nText: {3}".format(message.from_user.first_name,
                                                                message.from_user.last_name,
                                                                str(message.from_user.id), message.text))
    with open('log.txt', 'a') as f:
        f.write(str(datetime.now()) + str("Message from {0} {1}. (id = {2}) "
                                          "\nText: {3}\n".format(message.from_user.first_name,
                                                                 message.from_user.last_name,
                                                                 str(message.from_user.id), message.text)))


@bot.message_handler(commands=['help'])
def handle_text(message):
    bot.send_message(message.chat.id, """–û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´: 
–æ—á–µ—Ä–µ–¥—å - –ø—Ä–æ—Å–º–æ—Ç—Ä –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ —Å—Ç–∏—Ä–∫—É
–∑–∞–ø–∏—Å—å - –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –æ—á–µ—Ä–µ–¥—å
–ø—Ä–æ–ø—É—Å–∫ - –≤—ã–π—Ç–∏ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
–∫–ª—é—á–∏ - —É–∑–Ω–∞—Ç—å —É –∫–æ–≥–æ –∫–ª—é—á–∏(–∑–∞–∫–æ–Ω—á–∏—Ç—å —Å—Ç–∏—Ä–∫—É)
–Ω–∞–ø–æ–º–Ω–∏—Ç—å - –Ω–∞–ø–∏—Å–∞—Ç—å –ø–µ—Ä–≤–æ–º—É –≤ –æ—á–µ—Ä–µ–¥–∏ —á—Ç–æ–± –æ–Ω –ø–æ—Ç–æ—Ä–æ–ø–∏–ª—Å—è""")
    log(message)


@bot.message_handler(commands=['log'])
def handle_text(message):
    bot.send_message(message.chat.id, """–ò–°–¢–û–†–ò–Ø –ò–ó–ú–ï–ù–ï–ù–ò–ô: 
0.8 - –î–æ–±–∞–≤–ª–µ–Ω –ª–æ–≥ –≤–µ—Ä—Å–∏–π, –¥–æ–±–∞–≤–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤, —Å—Ç–∏–∫–µ—Ä—ã.
0.7 - –û—Ç–∫—Ä—ã—Ç—ã–π –±–µ—Ç–∞ —Ç–µ—Å—Ç, –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞–∑–Ω–∞—á–∞—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤.
0.1-0.6 - —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.""")
    log(message)


@bot.message_handler(commands=['start'])
def handle_text(message):
    bot.send_message(message.chat.id, """–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –æ—á–µ—Ä–µ–¥—å—é –Ω–∞ —Å—Ç–∏—Ä–∫—É.
    –ß—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å –∫–∞–∫ –∏–º —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–≤–µ–¥–∏ /help\n\nDeveloper: Danil Stepanov @Leronov\nQA: Sergij Lavrenko
    v.0.8""")
    log(message)


@bot.message_handler(commands=['alist'])
def handle_text(message):
    bot.send_message(message.chat.id, """–°–ü–ò–°–û–ö –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–û–í:
üôà Creator –î–∞–Ω–∏–ª –°—Ç–µ–ø–∞–Ω–æ–≤ @leronov""")
    log(message)


@bot.message_handler(commands=['admin'])
def handle_text(message):
    if message.chat.id == admin_id:
        bot.send_message(message.chat.id, """–ê–î–ú–ò–ù –ö–û–ú–ê–ù–î–´: 
        banID - –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
        —Å–±—Ä–æ—Å - –æ—á–∏—Å—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–∏
        clear - —Ä–∞–∑–±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        del - —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
        send.id.text - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ id
        ans.N.text - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç N-–æ–º—É —á–µ–ª–æ–≤–µ–∫—É –≤ –æ—á–µ—Ä–µ–¥–∏
        moder - –¥–æ–±–∞–≤–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
        remod - —É–±—Ä–∞—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞""")
    else:
        bot.send_sticker(message.chat.id, data="CAADAgADcgADFWxSHvYiqyusxbOoAg")
        bot.send_message(message.chat.id, "–û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ!")
    log(message)


@bot.message_handler(content_types=['text'])
def handle_text(message):
    log(message)
    load_data()
    cid = message.chat.id
    global queue_size
    queue_str = str(queue)

    queue_str = queue_str.replace("', '", ")\n")
    queue_str = queue_str.replace(".", "(")
    queue_str = queue_str.replace("']", ")")
    queue_str = queue_str.replace("['", "")
    queue_str = queue_str.title()

    message.text = message.text.lower()
    if str(cid) in black_list and not cid == admin_id:
        bot.send_message(cid, "–í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É.")
        bot.send_sticker(cid, data="CAADAgADbwADFWxSHoFhXikz_YidAg")
    elif not message.text.find("moder") == -1 and cid == admin_id:
        moder_id.append(message.text[message.text.find("r")+1:len(message.text)])
        save_data()
        bot.send_message(admin_id, "–ù–û–í–´–ô –ú–û–î–ï–†–ê–¢–û–† –ë–´–õ –î–û–ë–ê–í–õ–ï–ù")
    elif not message.text.find("remod") == -1 and cid == admin_id:
        moder_id.remove(message.text[message.text.find("d")+1:len(message.text)])
        save_data()
        bot.send_message(admin_id, "–ú–û–î–ï–†–ê–¢–û–† –ë–´–õ –£–î–ê–õ–Å–ù")
    elif not message.text.find("send") == -1 and (cid == admin_id or str(cid) in moder_id):
        com, usid, mes = message.text.split(".")
        bot.send_message(usid, mes)
        bot.send_message(cid, "–°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
    elif not message.text.find("ans") == -1 and (cid == admin_id or str(cid) in moder_id):
        com, usid, mes = message.text.split(".")
        bot.send_message(queue_id[int(usid)-1], mes)
        bot.send_message(cid, "–°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
    elif message.text == "—Å–±—Ä–æ—Å" and (cid == admin_id or str(cid) in moder_id):
        queue.clear()
        queue_size = 0
        queue_id.clear()
        save_data()
        bot.send_message(cid, "–¢—ã —Å–±—Ä–æ—Å–∏–ª –æ—á–µ—Ä–µ–¥—å!")
        bot.send_message(admin_id, "–ë–´–õ –í–´–ü–û–õ–ù–ï–ù –°–ë–†–û–° –û–ß–ï–†–ï–î–ò!")
    elif not message.text.find("ban") == -1 and (cid == admin_id or str(cid) in moder_id):
        black_list.append(message.text[message.text.find("n")+1:len(message.text)])
        bot.send_message(cid, "–ë–´–õ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ " + str(black_list[-1]))
        save_data()
    elif not message.text.find("clear") == -1 and (cid == admin_id or str(cid) in moder_id):
        if message.text[message.text.find("r") + 1:len(message.text)] in black_list:
            black_list.remove(message.text[message.text.find("r") + 1:len(message.text)])
            bot.send_message(cid, "–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –†–ê–ó–ë–õ–û–ö–ò–†–û–í–ê–ù!")
        else:
            bot.send_message(cid, "–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ù–ï –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù!")
        save_data()
    elif not message.text.find("del") == -1 and (cid == admin_id or str(cid) in moder_id):
        index = message.text[message.text.find("l")+1:len(message.text):1]
        queue.pop(int(index)-1)
        bot.send_message(cid, "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + str(queue_id.pop(int(index)-1)))
        bot.send_message(cid, "–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –£–î–ê–õ–Å–ù –ò–ó –û–ß–ï–†–ï–î–ò!")
        queue_size -= 1
        save_data()
    elif message.text == "–æ—á–µ—Ä–µ–¥—å":
        if queue_size == 0:
            bot.send_message(cid, "–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞—è! –ë—É–¥—å –ø–µ—Ä–≤—ã–º - –≤–≤–µ–¥–∏ \"–∑–∞–ø–∏—Å—å\"")
        elif cid == queue_id[0]:
            bot.send_message(cid, "–¢—ã –ø–µ—Ä–≤—ã–π –≤ –æ—á–µ—Ä–µ–¥–∏! –ë–µ–≥–æ–º —Å—Ç–∏—Ä–∞—Ç—å!\n"
                                  "–ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –≤–≤–µ–¥–∏ - –∫–ª—é—á–∏")
        else:
            bot.send_message(cid, "–û—á–µ—Ä–µ–¥—å –Ω–∞ —Å—Ç–∏—Ä–∫—É:\n"+queue_str)
    elif not message.text.find("–∑–∞–ø–∏—Å—å!") == -1 and not message.text.find(".") == -1:
        if cid in queue_id:
            bot.send_message(cid, "–í—ã —É–∂–µ –¥–æ–±–∞–≤–ª—è–ª–∏ —Å–µ–±—è –≤ –æ—á–µ—Ä–µ–¥—å!")
        else:
            queue.append(message.text[message.text.find("!")+1:len(message.text):1])
            queue_id.append(cid)
            queue_size += 1
            save_data()
            bot.send_message(cid, "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã!")
    elif not message.text.find("–∑–∞–ø–∏—Å—å") == -1:
        bot.send_message(cid, "–ß—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤–≤–µ–¥–∏—Ç–µ \"–∑–∞–ø–∏—Å—å!–§–∞–º–∏–ª–∏—è.‚Ññ–∫–æ–º–Ω–∞—Ç—ã\"\n–ü–†–ò–ú–ï–†: –∑–∞–ø–∏—Å—å!–ò–≤–∞–Ω–æ–≤.22")
    elif message.text == "–Ω–∞–ø–æ–º–Ω–∏—Ç—å":
        if queue_size == 0:
            bot.send_message(cid, "–í –æ—á–µ—Ä–µ–¥–∏ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç!")
        else:
            bot.forward_message(queue_id[0], cid, message.message_id)
            bot.send_message(cid, "–ù–∞–ø–æ–º–Ω–∏–ª —á–µ–ª–æ–≤–µ–∫—É –æ–± –æ—á–µ—Ä–µ–¥–∏!")
            bot.send_message(queue_id[0], "–í–∞–º –Ω–∞–ø–æ–º–Ω–∏–ª–∏ –æ–± –æ—á–µ—Ä–µ–¥–∏! –í–æ–∑—å–º–∏—Ç–µ/–ø–µ—Ä–µ–¥–∞–π—Ç–µ –∫–ª—é—á!")
    elif message.text == "–∫–ª—é—á–∏":
        if queue_size == 0:
            bot.send_message(cid, "–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞—è!")
        elif cid == queue_id[0]:
            bot.send_message(cid, "–í—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ —Å—Ç–∏—Ä–∫—É! –û—Ç–Ω–µ—Å–∏—Ç–µ –∫–ª—é—á–∏ –≤ —Å–ª–µ–¥—É—â—É—é –∫–æ–º–Ω–∞—Ç—É.")
            queue.pop(0)
            queue_id.pop(0)
            queue_size -= 1
            save_data()
        else:
            bot.send_message(cid, "–ö–ª—é—á–∏ –≤ –∫–æ–º–Ω–∞—Ç–µ: " + queue[0])
    elif message.text == "–ø—Ä–æ–ø—É—Å–∫":
        if cid in queue_id:
            index = queue_id.index(cid)
            queue_id.pop(index)
            queue.pop(index)
            queue_size -= 1
            save_data()
            bot.send_message(cid, "–¢—ã –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω –∏–∑ –æ—á–µ—Ä–µ–¥–∏.")
        else:
            bot.send_message(cid, "–¢–µ–±—è –Ω–µ –±—ã–ª–æ –≤ –æ—á–µ—Ä–µ–¥–∏.")
    else:
        bot.send_sticker(cid, data="CAADAgADfAADFWxSHhxDFfUvGy3vAg")
        bot.send_message(cid, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —á—Ç–æ —Ç—ã –æ—Ç –º–µ–Ω—è —Ö–æ—á–µ—à—å!")


bot.polling(none_stop=True, interval=0)
